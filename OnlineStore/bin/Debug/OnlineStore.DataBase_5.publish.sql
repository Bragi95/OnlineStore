/*
Deployment script for OnlineStore.DataBase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "OnlineStore.DataBase"
:setvar DefaultFilePrefix "OnlineStore.DataBase"
:setvar DefaultDataPath "K:\SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "K:\SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[TransferGoods]...';


GO
ALTER PROCEDURE [dbo].[TransferGoods]
	@sender int,
	@GoodsId int,
	@recipiend int,
	@quantityGoods int
AS
declare
@sendlerId int,
@recipiendId int
if exists(  select * from dbo.Goods_Storage as GS where GS.GoodsId = @GoodsId and StorageId = @sender and (GS.QuantityGoods - @quantityGoods) > 0)
begin
	Update dbo.Goods_Storage
	set
		QuantityGoods -= @quantityGoods,
		@sendlerId = Id
	where GoodsId = @GoodsId and StorageId = @sender
end
else  THROW 404, 'The product is not available in this store', 1;  

if exists(  select * from dbo.Goods_Storage as GS where GS.GoodsId = @GoodsId and StorageId = @recipiend )
begin
	Update dbo.Goods_Storage 
	set
		QuantityGoods += @quantityGoods,
		@recipiendId = id
	where GoodsId = @GoodsId and StorageId = @recipiend
end
else
 begin
	insert into dbo.Goods_Storage
	values(@GoodsId,@recipiend,@quantityGoods)
 set @recipiendId = SCOPE_IDENTITY()
end


SELECT G.Id , G.Brand,G.Model, G.Price, CY.Id, CY.Name as City, S.Id, S.Name as StorageName, S.Address,s.Phone,S.Email,GS.Id, GS.QuantityGoods from dbo.Goods_Storage as GS
	join dbo.Goods as G on G.Id = GS.GoodsId	
	join dbo.Storage as S on s.Id = GS.StorageId	
	left join dbo.City as CY on CY.Id = s.CityId
	where GS.StorageId = @sender and  GS.GoodsId = @GoodsId

SELECT G.Id , G.Brand,G.Model, G.Price, CY.Id, CY.Name as City, S.Id, S.Name as StorageName, S.Address,s.Phone,S.Email,GS.Id, GS.QuantityGoods from dbo.Goods_Storage as GS
	join dbo.Goods as G on G.Id = GS.GoodsId	
	join dbo.Storage as S on s.Id = GS.StorageId	
	left join dbo.City as CY on CY.Id = s.CityId
	where GS.StorageId = @recipiend and  GS.GoodsId = @GoodsId
GO
PRINT N'Creating [dbo].[SelectOrderById]...';


GO
CREATE PROCEDURE [dbo].[SelectOrderById]
	 @orderId int 
	
AS
select 
	o.id, 
    S.Id, S.Name, S.CityId, S.Address, S.Phone,
    PT.Id,  PT.Name,
    SO.Id,  SO.Name, 
    C. Id, C.Name, C.LastName, C.Address, c.Phone
from dbo.[Order] as O
join dbo.Customer as C on C.Id = O.CustomerId
join dbo.Storage as S on S.Id = O.StorageId
join dbo.PaymentType as PT on PT.Id = O.PaymentTypeId
join dbo.StatusOrder as SO on So.Id = O.StatusOrderId
where O.Id = @orderId
GO
PRINT N'Update complete.';


GO
