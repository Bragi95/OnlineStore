/*
Deployment script for OnlineStore.DataBase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "OnlineStore.DataBase"
:setvar DefaultFilePrefix "OnlineStore.DataBase"
:setvar DefaultDataPath "K:\SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "K:\SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[MergeOrder]...';


GO
ALTER PROCEDURE [dbo].[MergeOrder]
	@id int = null,
	@UserId int = null,
	@PaymentTypeId int = null,
	@StatusOrderId int = null,
	@StorageId int = null,
	@TotalCost decimal = null	
	
AS
declare @result int
set @result = @id
Merge dbo.[Order] AS O
using (select
	   @id,
	   @UserId,
	   @PaymentTypeId ,
	   @StorageId,
	   @StatusOrderId, 	   
	   @TotalCost)
as sourse (
	   id,
	   UserId,
	   PaymentTypeId,
	   StorageId,
	   StatusOrderId,
	   TotalCost)
on (O.Id = sourse.Id)
WHEN MATCHED THEN 
update   set
		PaymentTypeId = @PaymentTypeId,	
		StorageId = @StorageId,
		TotalCost = @TotalCost
WHEN NOT MATCHED THEN	
insert  (
	    UserId,
	    PaymentTypeId,
		StorageId,
	    StatusOrderId,
		DateOrder,
	    TotalCost)
values(
	    @UserId,
	    @PaymentTypeId ,
		@StorageId,
	    8, 
	    Sysdatetime(),
	    @TotalCost);  
if(@result is NUll) set  @result = SCOPE_IDENTITY()

select 
	o.id, O.DateOrder, O.TotalCost,
    S.Id, S.Name, S.CityId, S.Address, S.Phone,
    PT.Id,  PT.Name,
    SO.Id,  SO.Name, 
    U. Id, U.Name, U.LastName, U.Address, U.Phone    
 from dbo.[Order] as O
	left join dbo.[User] as U on U.Id = O.UserId
	left join dbo.Storage as S on S.Id = O.StorageId
	left join dbo.PaymentType as PT on PT.Id = O.PaymentTypeId
	left join dbo.StatusOrder as SO on So.Id = O.StatusOrderId
where O.Id = @result
GO
PRINT N'Creating [dbo].[UpdateStatusOrderByOrderId]...';


GO
CREATE PROCEDURE [dbo].[UpdateStatusOrderByOrderId]
	@orderid int ,
	@statusId int
AS
	update dbo.[Order] 
	set 
		StatusOrderId = @statusId
	Where id = @orderid
	
exec SelectOrderById @orderid
GO
PRINT N'Update complete.';


GO
